@model S_EDex365.Model.Model.AdminDashboard
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutA.cshtml";
}

<div class="content-wrapper">
    <div class="container mt-4">
        <div class="row">
            <div class="col-md-4 mb-3">
                <div class="card" style=" border-radius: 10px;">
                    <div class="card-body" style="background-color:#FF5733;  height:90px;  border-radius: 10px;">
                        <h2 class="card-title text-center" style=" color:white;">Total Problems</h2>
                        <h5 class="card-text text-center" style=" color:white; font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); ">@Model.TotalProblems</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">

                <div class="card" style=" border-radius: 10px;">
                    <div class="card-body" style="background-color:#581845;  height:90px;  border-radius: 10px;">
                        <h2 class="card-title text-center" style=" color:white;">Pending Question</h2>
                        <h5 class="card-text text-center" style=" color:white; font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); ">@Model.PendingSolutions</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3">
                <div class="card" style=" border-radius: 10px;">
                    <div class="card-body" style="background-color:#FFC300;  height:90px;  border-radius: 10px;">
                        <h2 class="card-title text-center" style=" color:white;">Solution</h2>
                        <h5 class="card-text text-center" style=" color:white; font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); ">@Model.TotalSolutions</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3" style="display:none">
                <div class="card">
                    <div class="card-body" style="background-color:#DAF7A6;  height:90px;">
                        <h2 class="card-title text-center" style=" color:black;">Total Problems</h2>
                        <h5 class="card-text text-center" style=" color:black; font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); ">@Model.TotalSolutions</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3" style="display:none">
                <div class="card">
                    <div class="card-body" style="background-color:#8e44ad ;  height:90px;">
                        <h2 class="card-title text-center" style=" color:black;">Total Problems</h2>
                        <h5 class="card-text text-center" style=" color:black; font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); ">@Model.TotalSolutions</h5>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-3" style="display:none">
                <div class="card">
                    <div class="card-body" style="background-color:#1e8449;  height:90px;">
                        <h2 class="card-title text-center" style=" color:black;">Total Problems</h2>
                        <h5 class="card-text text-center" style=" color:black; font-weight: bold; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); ">@Model.TotalSolutions</h5>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <canvas id="myChart"></canvas>
        </div>

    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


@* <script>
    const ctx = document.getElementById('myChart');

    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
            datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script> *@


@* everyday data *@
<script>
    const ctx = document.getElementById('myChart').getContext('2d');

    // Pass data from the model to JavaScript variables
    const totalProblems = @Model.TotalProblems;
    const pendingSolutions = @Model.PendingSolutions;
    const totalSolutions = @Model.TotalSolutions;

    // Initialize the chart
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Total Problems', 'Pending Solutions', 'Total Solutions'], // X-axis labels
            datasets: [{
                label: 'Statistics',
                data: [totalProblems, pendingSolutions, totalSolutions], // Data from the model
                backgroundColor: ['#FF5733', '#581845', '#FFC300'], // Custom colors for each bar
                borderColor: ['#FF5733', '#581845', '#FFC300'],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                },
                x: {
                    // Adjust bar and category widths
                    barPercentage: 0.5,         // Controls the width of each bar (0-1; smaller values make bars thinner)
                    categoryPercentage: 0.6     // Controls spacing around each bar within a group (0-1)
                }
            }
        }
    });
</script>

@* whole month data *@
@* <script>
    const ctx = document.getElementById('myChart').getContext('2d');

    // Pass month data from the model to JavaScript variables
    const totalProblemsMonth1 = @Model.TotalProblemsMonth1;
    const pendingSolutionsMonth1 = @Model.PendingSolutionsMonth1;
    const totalSolutionsMonth1 = @Model.TotalSolutionsMonth1;

    const totalProblemsMonth2 = @Model.TotalProblemsMonth2;
    const pendingSolutionsMonth2 = @Model.PendingSolutionsMonth2;
    const totalSolutionsMonth2 = @Model.TotalSolutionsMonth2;

    // Initialize the chart
    new Chart(ctx, {
        type: 'bar',
        data: {
            labels: ['Total Problems', 'Pending Solutions', 'Total Solutions'], // X-axis labels for metrics
            datasets: [
                {
                    label: 'Month 1', // First month data
                    data: [totalProblemsMonth1, pendingSolutionsMonth1, totalSolutionsMonth1],
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                },
                {
                    label: 'Month 2', // Second month data
                    data: [totalProblemsMonth2, pendingSolutionsMonth2, totalSolutionsMonth2],
                    backgroundColor: 'rgba(153, 102, 255, 0.5)',
                    borderColor: 'rgba(153, 102, 255, 1)',
                    borderWidth: 1
                }
            ]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script> *@
